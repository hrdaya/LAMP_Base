version: '3.8'
services:
    web:
        build:
            context: ./docker/apache
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: vessel/apache
        tty: true
        ports:
            - "${APP_PORT:-80}:80"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            WWWUSER: "${WWWUSER}"
        volumes:
            - .:/var/www/html
        networks:
            - vessel
        depends_on:
            - redis
    mysql:
        image: mysql:8.0
        platform: "linux/x86_64"
        ports:
            - "${DB_APP_PORT:-3306}:${DB_PORT:-3306}"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            TZ: "Asia/Tokyo"
        volumes:
            - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d # コンテナ初回起動時に自動実行
            - '/docker/mysql/conf.d:/etc/mysql/conf.d' # 設定ファイル
            - ./docker/mysql/_data:/var/lib/mysql # データ
            - ./docker/mysql/_logs:/var/log/mysql #ログ
        command: bash -c 'usermod -o -u ${WWWUSER} mysql; groupmod -o -g ${WWWGROUP} mysql; chown -R mysql:mysql /var/run/mysqld/ /var/log/mysql/ /var/lib/mysql/; /entrypoint.sh mysqld --user=mysql --console'
        networks:
            - vessel
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - "${DB_ADMIM_HTTP_PORT:-8080}:80"
        environment:
            PMA_HOST: mysql
        networks:
            - vessel
        depends_on:
            - mysql
    redis:
        image: 'redis:latest'
        networks:
            - vessel
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - "${MAILHOG_HTTP_PORT:-8025}:8025"
        networks:
            - vessel
networks:
    vessel:
        driver: bridge
