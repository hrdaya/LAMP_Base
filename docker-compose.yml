version: "3.8"
services:
    php:
        build:
            context: ./.docker/php
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
                TZ: "Asia/Tokyo"
        image: vessel/php
        tty: true
        ports:
            - "${APP_PORT:-80}:80"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            WWWUSER: "${WWWUSER}"
        volumes:
            - .:/var/www/html
        networks:
            - vessel
        depends_on:
            - redis
    mysql_master:
        build:
            context: ./.docker/mysql
            dockerfile: Dockerfile
            args:
                MY_CNF_DIR: master
        image: vessel/mysql_master
        platform: linux/${PLATFORM:-x86_64}
        security_opt:
            - seccomp:unconfined
        ports:
            - "${DB_APP_WRITE_PORT:-3306}:${DB_PORT:-3306}"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD:-sample_db}"
            MYSQL_DATABASE: "${DB_DATABASE:-sample_db}"
            MYSQL_USER: "${DB_USERNAME:-sample_db}"
            MYSQL_PASSWORD: "${DB_PASSWORD:-sample_db}"
            TZ: "Asia/Tokyo"
        volumes:
            - ./.docker/mysql/master/initdb.d:/docker-entrypoint-initdb.d:ro # コンテナ初回起動時に自動実行(ro: 読み込み専用)
            - ./.docker/mysql/master/data:/var/lib/mysql:cached # データ(cached: ホスト上の更新がコンテナ上に反映するまで、遅延が発生するのを許容)
            - ./.docker/mysql/master/logs:/var/log/mysql:cached #ログ(cached: ホスト上の更新がコンテナ上に反映するまで、遅延が発生するのを許容)
        command: bash -c "usermod -o -u ${WWWUSER} mysql; groupmod -o -g ${WWWGROUP} mysql; chown -R mysql:mysql /var/run/mysqld/ /var/log/mysql/ /var/lib/mysql/; /entrypoint.sh mysqld --user=mysql --console"
        networks:
            - vessel
    mysql_slave:
        build:
            context: ./.docker/mysql
            dockerfile: Dockerfile
            args:
                MY_CNF_DIR: slave
        image: vessel/mysql_slave
        platform: linux/${PLATFORM:-x86_64}
        security_opt:
            - seccomp:unconfined
        ports:
            - "${DB_APP_READ_PORT:-3307}:${DB_PORT:-3306}"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD:-sample_db}"
            MYSQL_DATABASE: "${DB_DATABASE:-sample_db}"
            MYSQL_USER: "${DB_USERNAME:-sample_db}"
            MYSQL_PASSWORD: "${DB_PASSWORD:-sample_db}"
            TZ: "Asia/Tokyo"
        volumes:
            - ./.docker/mysql/slave/initdb.d:/docker-entrypoint-initdb.d:ro # コンテナ初回起動時に自動実行(ro: 読み込み専用)
            - ./.docker/mysql/slave/data:/var/lib/mysql:cached # データ(cached: ホスト上の更新がコンテナ上に反映するまで、遅延が発生するのを許容)
            - ./.docker/mysql/slave/logs:/var/log/mysql:cached #ログ(cached: ホスト上の更新がコンテナ上に反映するまで、遅延が発生するのを許容)
        command: bash -c "usermod -o -u ${WWWUSER} mysql; groupmod -o -g ${WWWGROUP} mysql; chown -R mysql:mysql /var/run/mysqld/ /var/log/mysql/ /var/lib/mysql/; /entrypoint.sh mysqld --user=mysql --console"
        networks:
            - vessel
        depends_on:
            - mysql_master
    adminer:
        image: adminer:latest
        ports:
            - "${DB_ADMIM_HTTP_PORT:-8080}:8080"
        environment:
            ADMINER_DESIGN: "mvt"
            ADMINER_DEFAULT_SERVER: "mysql_master"
        networks:
            - vessel
        depends_on:
            - mysql_master
    redis:
        image: redis:latest
        ports:
            - "${REDIS_PORT:-6379}:6379"
        networks:
            - vessel
    redisinsight:
        image: redislabs/redisinsight:latest
        ports:
            - "${REDIS_HTTP_PORT:-8001}:8001"
    mailhog:
        image: mailhog/mailhog:latest
        ports:
            - "${MAILHOG_MAIL_PORT:-1025}:1025"
            - "${MAILHOG_HTTP_PORT:-8025}:8025"
        networks:
            - vessel
networks:
    vessel:
        driver: bridge
